<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\controllers\base;

use app\models\Units;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;
use yii\data\ActiveDataProvider;
use yii;
/**
* UnitsController implements the CRUD actions for Units model.
*/
class UnitsController extends Controller
{
	/**
	* @var boolean whether to enable CSRF validation for the actions in this controller.
	* CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
	*/
	public $enableCsrfValidation = false;
	public $layout = "items";

	/**
	* Lists all Units models.
	* @return mixed
	*/
	public function actionIndex(){
		return $this->render('index', []);
	}
	public function actionAll(){
		$model = Units::find()->all();
		Yii::$app->response->format = yii\web\Response::FORMAT_JSON;
		Yii::$app->response->statusCode = 200;
		return Yii::$app->response->data = ["data"=>$model];
	}

	/**
	* Displays a single Units model.
	* @param integer $id
	*
	* @return mixed
	*/
	public function actionView($id)
	{
		$model = $this->findModel($id);
		Yii::$app->response->format = yii\web\Response::FORMAT_JSON;
		Yii::$app->response->statusCode = 200;
		return Yii::$app->response->data = $model;
	}

	/**
	* Creates a new Units model.
	* If creation is successful, the browser will be redirected to the 'view' page.
	* @return mixed
	*/
	public function actionCreate()
	{
		$model = new Units;
		Yii::$app->response->format = yii\web\Response::FORMAT_JSON;
		if (Yii::$app->request->isPost ) {
			foreach (Yii::$app->request->post() as $key => $value) {
				$model->unit_name = Yii::$app->request->post()[$key];
			}
			if ($model->save()) {

				Yii::$app->response->statusCode = 200;
				return Yii::$app->response->data = ['id' => $model->id];
			}
		}
		return Yii::$app->response->statusCode = 400;
	}

	/**
	* Updates an existing Units model.
	* If update is successful, the browser will be redirected to the 'view' page.
	* @param integer $id
	* @return mixed
	*/
	public function actionUpdate($id)
	{
		if ($id != 1) {
			$model = $this->findModel($id);
			Yii::$app->response->format = yii\web\Response::FORMAT_JSON;
			if (Yii::$app->request->isPost ) {
				
				foreach (Yii::$app->request->post() as $key => $value) {
					$model->{$key} = $value;
				}
				if ($model->save()) {

					Yii::$app->response->statusCode = 200;
					return Yii::$app->response->data = ['id' => $model->id];
				}
			}
		}
		Yii::$app->response->statusCode = 400;
		
	}

	/**
	* Deletes an existing Units model.
	* If deletion is successful, the browser will be redirected to the 'index' page.
	* @param integer $id
	* @return mixed
	*/
	public function actionDelete($id)
	{
		if ($id != 1) {
			if (Yii::$app->request->isPost ) {
					if ($this->findModel($id)->delete()) {
						return Yii::$app->response->statusCode = 200;
					}
			}
		}
		
		return Yii::$app->response->statusCode = 400;
	}

	/**
	* Finds the Units model based on its primary key value.
	* If the model is not found, a 404 HTTP exception will be thrown.
	* @param integer $id
	* @return Units the loaded model
	* @throws HttpException if the model cannot be found
	*/
	protected function findModel($id)
	{
		if (($model = Units::findOne($id)) !== null) {
			return $model;
		} else {
			throw new HttpException(404, 'The requested page does not exist.');
		}
	}
}
