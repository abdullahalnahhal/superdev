<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\controllers\base;

use app\models\SellingBills;
use app\models\SellingBillsDetails;
use app\models\Items;
use app\models\MainUnits;
use app\models\SubUnits;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;
use yii\data\ActiveDataProvider;
use yii;
/**
* SellingBillsController implements the CRUD actions for SellingBills model.
*/
class SellingBillsController extends Controller
{
	/**
	* @var boolean whether to enable CSRF validation for the actions in this controller.
	* CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
	*/
	public $enableCsrfValidation = false;
	public $layout = "selling";

	/**
	* Lists all SellingBills models.
	* @return JSON
	*/
	
	public function actionIndex()
	{
		$items = Items::find()->all();
		return $this->render('index',["items"=>$items]);
	}
	/**
	* Lists all SellingBills models.
	* @return Arrays
	*/
	
	public function actionSales()
	{
		if (Yii::$app->request->isPost) {
			$date = Yii::$app->request->post()['date'];
			$model = SellingBills::find()->where(["date"=>$date])->all();
		}
		else{
			$model = SellingBills::find()->all();
		}
		return $this->render('selling',["model"=>$model]);
	}
	public function actionAll(){
		$model = SellingBills::find()->all();
		Yii::$app->response->format = yii\web\Response::FORMAT_JSON;
		Yii::$app->response->statusCode = 200;
		return Yii::$app->response->data = ["data"=>$model];
	}
	/**
	* Displays a single SellingBills model.
	* @param integer $id
	*
	* @return mixed
	*/
	public function actionView($id)
	{
	\Yii::$app->session['__crudReturnUrl'] = Url::previous();
	Url::remember();
	Tabs::rememberActiveState();

	return $this->render('view', [
	'model' => $this->findModel($id),
	]);
	}

	/**
	* Creates a new SellingBills model.
	* If creation is successful, the browser will be redirected to the 'view' page.
	* @return JSON
	*/
	public function actionCreate()
	{
		Yii::$app->response->format = yii\web\Response::FORMAT_JSON;
		$model = new SellingBills;
		$date = date("Y-m-d");
		$post = Yii::$app->request->post();
		$price = 0;
		$status = false;
		if (Yii::$app->request->isPost) {
			if (!isset($post["bill_code"])||trim($post["bill_code"]) == "") {
					$post["bill_code"] = time();
				}
				if (!isset($post["counter"])) {
						$post["counter"] = 0;
					}
				if ($post["counter"] && $post["counter"] != 0) {
					for ($i=1; $i <= $post["counter"]; $i++) { 
						if (isset($post["price-".$i])) {
							$price = $price + $post["price-".$i] ;
						}
					}
					$model->bill_code = $post["bill_code"];
					$model->total_price = $price;
					$model->date = $date;
					$quantity  = 0 ;
					if ($model->save()) {
						if ($post["counter"]){
							for ($i=1; $i <= Yii::$app->request->post()["counter"] ; $i++){
								$item_code = $post["item-".$i];
								$details = new SellingBillsDetails();
								$details->selling_bills_id = $model->id ;
								$items = Items::find()->where(["item_code"=>$post["item-".$i]])->all();
								$details->items_id = $items[0]->id;
								$details->quantity = $post["quantity-".$i];
								$details->price = $post["price-".$i];
								$unit = $post["unit-".$i];
								if ($details->save()) {
									$items = Items::find()->where(["item_code"=>$item_code])->all();
									$items = Items::findOne($items[0]->id);
									$items->quantity = $items->quantity - $post["quantity-".$i];
									if ($items->save()) {
										if ($items->save()) {
											$status = true;
										}
										else{
											$status = false;
										}
									}
								}
							}
						}
					}	
			}
		}
		if ($status) {
			Yii::$app->response->statusCode = 200;
			return ["id"=>$model->id];
		}
		else{
			Yii::$app->response->statusCode = 400;
		}
	}


	/**
	* Deletes an existing SellingBills model.
	* If deletion is successful, the browser will be redirected to the 'index' page.
	* @param integer $id
	* @return status code
	*/
	public function actionDelete($id)
	{
		if (Yii::$app->request->isPost ) {
			$details = SellingBillsDetails::deleteAll(['selling_bills_id' => $id]);
			if ($this->findModel($id)->delete()) {
				return Yii::$app->response->statusCode = 200;
			}
		}
		return Yii::$app->response->statusCode = 400;
	}

	/**
	* Finds the SellingBills model based on its primary key value.
	* If the model is not found, a 404 HTTP exception will be thrown.
	* @param integer $id
	* @return SellingBills the loaded model
	* @throws HttpException if the model cannot be found
	*/
	protected function findModel($id)
	{
		if (($model = SellingBills::findOne($id)) !== null) {
			return $model;
		} else {
			throw new HttpException(404, 'The requested page does not exist.');
		}
	}
}
